package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.util.ElapsedTime;

@Autonomous(name = "autoblue1", group = "auto")
public class autoblue1 extends LinearOpMode {

    Hardware robot = Hardware.getInstance();
    public AutoGyro movegyro = new AutoGyro();
    public AutoEncoder moveencoder = new AutoEncoder();
    private ElapsedTime runtime = new ElapsedTime();

    public void runOpMode() {
        robot.init(hardwareMap);

        waitForStart();

        //move towards carousel
        robot.setsIntPosition(0.15);

        moveencoder.Drive(0.8, -6, 6, 6, -6); //left
        moveencoder.Drive(0.8, -19, -19, -19, -19);
        //movegyro.Drive(0.5, -19, 0, robot, telemetry);

        //move.DriveEncoder(0.5, -3, 3, 3, -3);

        telemetry.addData("Run time: ", runtime.seconds());
        runtime.reset();

        while(runtime.seconds() < 2.5)
        {
            robot.leftduckPos(0.6);
        }

        robot.leftduckPos(0);

        movegyro.Drive(0.6, 30, 10, robot, telemetry);
        movegyro.Drive(0.6, 10, 100, robot, telemetry);
        //robot.setsIntPosition(0.44);
        robot.intakeSetPower(1);
        robot.setsIntPosition(0.15);
        movegyro.Drive(0.5, -20, 20, robot, telemetry);

       // movegyro.Drive(0.5, -50, 180, robot, telemetry);

       // movegyro.Drive(0.5, -40, -30, robot, telemetry);

        /**
         //park in square
         moveencoder.Drive(0.6, -22, 22, 22, -22);  //left
         movegyro.Drive(0.5, 9, 0, robot, telemetry);*/

    }
}
