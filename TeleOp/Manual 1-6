package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DigitalChannel;
import com.qualcomm.robotcore.util.ElapsedTime;

@com.qualcomm.robotcore.eventloop.opmode.TeleOp(name="TeleOpTest", group="Robot")

public class Manual extends LinearOpMode {
    Hardware robot = Hardware.getInstance();
    private ElapsedTime run = new ElapsedTime();
    DigitalChannel digitalTouch;  // Hardware Device Object

    public void runOpMode()  {
        double drive = 0;
        double turn = 0;
        double max;
        double strafe = 0;
        boolean intake = false;
        boolean pressingrt = false;
        boolean pressinglt = false;
        boolean moveForward = false;
        boolean moveBackward = false;
        boolean servostatus = false;
        boolean pressingdup = false;
        boolean pressingddown = false;

        robot.init(hardwareMap);

        //int number = 0;
        //robot.intake.setTargetPosition(0);
        //robot.intake.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        //robot.intakeSetPower(0.35);

        waitForStart();

        while(opModeIsActive())
        {
            drive = -gamepad1.left_stick_y;
            turn = gamepad1.right_stick_x;
            strafe = gamepad1.left_stick_x;

            //move carousel servo with bumpers. right bumper for red, left for blue
             if((gamepad2.left_bumper)) {
                robot.duckPower(-0.9);
            }
            else if ((gamepad2.right_bumper)) {
                robot.duckPower(0.9);
            }
            else {
                robot.duckPower(0);
             }

            //move servo claw in and out to contain freight
            if (gamepad2.b) {
                robot.setsClawPosition(0.2);
            }
            if(gamepad2.a) {
                robot.setsClawPosition(0.3);
            }
            if(gamepad2.x) {
                robot.setsClawPosition(0.26);
            }

            //move the intake noodles
            robot.intakeSetPower(-gamepad2.left_stick_y);

            //move arm up and down
            robot.armSetPower(gamepad2.right_stick_y);

            if((gamepad2.dpad_up)) {
                robot.armSetPower(0.6);
            }
            else if((gamepad2.dpad_down)) {
                robot.armSetPower(-0.4);
            }
            else {
                robot.armSetPower(0);
            }

            telemetry.update();

            //move servo box up and down. Mid position: 0.3; Down: 0.44; All the way up: 0.15
            //y goes all the way up, b is mid position, a is down
           

            //decrease forward speed slowly with right trigger
            if ((gamepad1.right_trigger > 0.1) && !pressingrt) {
                if (moveForward) {
                    robot.setPower(0.35, 0.35, 0.35, 0.35);

                    int counter = 0;
                    while (gamepad1.right_trigger > 0.1) {
                        drive = 1-(counter*0.5);
                        counter++;
                    }
                    moveForward = false;
                }
                else {
                    moveForward = true;
                    robot.setPower(-0.35,-0.35,-0.35,-0.35);
                    drive = -0.35;
                }
                pressingrt = true;

            } else if (!(gamepad1.right_trigger > 0.1)) {
                //action
                pressingrt = false;
            }


            //decrease backward speed slowly with left trigger
            if ((gamepad1.left_trigger > 0.1) && !pressinglt) {
                if (moveBackward) {
                    robot.setPower(-0.35, -0.35, -0.35, -0.35);

                    int counter = 0;
                    while (gamepad1.left_trigger > 0.1) {
                        drive = -(1- (counter*0.5));
                        counter++;
                    }
                    moveBackward = false;
                }
                else {
                    moveBackward = true;
                    robot.setPower(0.35,0.35,0.35,0.35);
                    drive = 0.35;
                }
                pressinglt = true;

            } else if (!(gamepad1.left_trigger > 0.1)) {
                //action
                pressinglt = false;
            }


            //movement
            max = Math.max(Math.abs(drive - strafe - turn), Math.max(Math.abs(drive + strafe - turn),
                    Math.max(Math.abs(drive + strafe + turn), Math.abs(drive + turn - strafe))));
            if (max < robot.maxSpeed) {
                robot.setPower(drive - strafe - turn, drive + strafe - turn,
                        drive + strafe + turn, drive + turn - strafe);
            }
            else {
                double scaleFactor = max / robot.maxSpeed;
                robot.setPower((drive - strafe - turn) * scaleFactor, (drive + strafe - turn) * scaleFactor,
                        (drive + strafe + turn) * scaleFactor, (drive + turn - strafe) * scaleFactor);
            }

        }//close while loop for opmode is active
    }//close opmode
}//close class
